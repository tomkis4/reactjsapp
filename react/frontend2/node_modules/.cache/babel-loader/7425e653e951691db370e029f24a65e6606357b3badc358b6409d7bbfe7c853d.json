{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactapp\\\\react\\\\frontend\\\\src\\\\CatsImages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatsImages() {\n  _s();\n  const [catImage, setCatImage] = useState('');\n  useEffect(() => {\n    fetchCatImage();\n  }, []);\n  const fetchCatImage = async () => {\n    try {\n      const response = await fetch('https://api.thecatapi.com/v1/images/search?limit=1', {\n        headers: {\n          'x-api-key': 'live_Kg8HqvTiYpHdztHFk3w6RiVaptksun4cHmjtX90wKZ6qVKz1ZZ47wNizOntIlACC'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Błąd pobierania danych');\n      }\n      const data = await response.json();\n      setCatImage(data[0].url);\n    } catch (error) {\n      console.error('Błąd pobierania obrazu kota:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CatsImages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), catImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: catImage,\n      alt: \"Cat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CatsImages, \"Ud3DAIQMcb2ECymUjCPLN2lLniw=\");\n_c = CatsImages;\nexport default CatsImages;\nvar _c;\n$RefreshReg$(_c, \"CatsImages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CatsImages","_s","catImage","setCatImage","fetchCatImage","response","fetch","headers","ok","Error","data","json","url","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/reactapp/react/frontend/src/CatsImages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CatsImages() {\r\n  const [catImage, setCatImage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchCatImage();\r\n  }, []);\r\n\r\n  const fetchCatImage = async () => {\r\n    try {\r\n      const response = await fetch('https://api.thecatapi.com/v1/images/search?limit=1', {\r\n        headers: {\r\n          'x-api-key': 'live_Kg8HqvTiYpHdztHFk3w6RiVaptksun4cHmjtX90wKZ6qVKz1ZZ47wNizOntIlACC'\r\n        }\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Błąd pobierania danych');\r\n      }\r\n      const data = await response.json();\r\n      setCatImage(data[0].url);\r\n    } catch (error) {\r\n      console.error('Błąd pobierania obrazu kota:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>CatsImages</h1>\r\n      {catImage && <img src={catImage} alt=\"Cat\" />} {/* Wyświetl obraz kota, jeśli jest dostępny */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CatsImages;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdO,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,EAAE;QACjFC,OAAO,EAAE;UACP,WAAW,EAAE;QACf;MACF,CAAC,CAAC;MACF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,WAAW,CAACO,IAAI,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBjB,QAAQ,iBAAIH,OAAA;MAAKqB,GAAG,EAAElB,QAAS;MAACmB,GAAG,EAAC;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAAClB,EAAA,CA9BQD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactapp\\\\react\\\\frontend\\\\src\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Pobierz nazwę użytkownika z local storage\n    const storedUsername = localStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    } else {\n      // Jeśli nie ma nazwy użytkownika w local storage, przekieruj do strony logowania\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    // Pobierz wiadomości czatu z serwera po załadowaniu komponentu\n    fetchChatMessages();\n  }, []);\n  const fetchChatMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/get-chat-messages');\n      if (!response.ok) {\n        throw new Error('Error fetching chat messages');\n      }\n      const data = await response.json();\n      setChatMessages(data.messages);\n    } catch (error) {\n      console.error('Error fetching chat messages:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8081/send-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          message\n        })\n      });\n      if (response.ok) {\n        // Zapisano wiadomość pomyślnie\n        console.log('Message sent successfully!');\n        // Pobierz najnowsze wiadomości czatu\n        fetchChatMessages();\n        // Wyczyść pole wiadomości\n        setMessage('');\n      } else {\n        // Błąd podczas wysyłania wiadomości\n        console.error('Error sending message');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleLogout = () => {\n    // Usuń nazwę użytkownika z local storage\n    localStorage.removeItem('username');\n    // Przekieruj użytkownika na stronę logowania\n    navigate('/login');\n  };\n  const handleReturnToMainPage = () => {\n    // Przekieruj użytkownika na stronę główną\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReturnToMainPage,\n          children: \"Return to Main Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chatMessages.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [chatMessage.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), \" \", chatMessage.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        readOnly: true,\n        placeholder: \"Your username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"iePT8E/8YdxZPXC2c7W8bPx7vP0=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","ChatPage","_s","username","setUsername","message","setMessage","chatMessages","setChatMessages","navigate","storedUsername","localStorage","getItem","fetchChatMessages","response","fetch","ok","Error","data","json","messages","error","console","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","log","handleLogout","removeItem","handleReturnToMainPage","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","chatMessage","index","onSubmit","type","value","readOnly","placeholder","required","onChange","target","_c","$RefreshReg$"],"sources":["C:/reactapp/react/frontend/src/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ChatPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Pobierz nazwę użytkownika z local storage\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    } else {\r\n      // Jeśli nie ma nazwy użytkownika w local storage, przekieruj do strony logowania\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Pobierz wiadomości czatu z serwera po załadowaniu komponentu\r\n    fetchChatMessages();\r\n  }, []);\r\n\r\n  const fetchChatMessages = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8081/get-chat-messages');\r\n      if (!response.ok) {\r\n        throw new Error('Error fetching chat messages');\r\n      }\r\n      const data = await response.json();\r\n      setChatMessages(data.messages);\r\n    } catch (error) {\r\n      console.error('Error fetching chat messages:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8081/send-message', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, message }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Zapisano wiadomość pomyślnie\r\n        console.log('Message sent successfully!');\r\n        // Pobierz najnowsze wiadomości czatu\r\n        fetchChatMessages();\r\n        // Wyczyść pole wiadomości\r\n        setMessage('');\r\n      } else {\r\n        // Błąd podczas wysyłania wiadomości\r\n        console.error('Error sending message');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Usuń nazwę użytkownika z local storage\r\n    localStorage.removeItem('username');\r\n    // Przekieruj użytkownika na stronę logowania\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleReturnToMainPage = () => {\r\n    // Przekieruj użytkownika na stronę główną\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <h2>Chat</h2>\r\n        <div>\r\n          <button onClick={handleLogout}>Logout</button>\r\n          <button onClick={handleReturnToMainPage}>Return to Main Page</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {chatMessages.map((chatMessage, index) => (\r\n          <div key={index}>\r\n            <strong>{chatMessage.username}: </strong> {chatMessage.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          readOnly\r\n          placeholder=\"Your username\"\r\n          required\r\n        />\r\n        <textarea\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}